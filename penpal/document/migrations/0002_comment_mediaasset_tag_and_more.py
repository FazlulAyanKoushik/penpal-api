# Generated by Django 5.2.7 on 2025-10-29 05:42

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('document', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('body', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('soft_delete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'comments',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='MediaAsset',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('file_type', models.CharField(choices=[('image', 'Image'), ('video', 'Video'), ('file', 'File')], max_length=20)),
                ('file', models.FileField(upload_to='media_assets/')),
                ('url', models.URLField(blank=True)),
                ('meta_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('soft_delete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'media_assets',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=120, unique=True)),
                ('soft_delete', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'tags',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.RenameIndex(
            model_name='document',
            new_name='documents_author__5834d2_idx',
            old_name='document_do_author__8dd718_idx',
        ),
        migrations.RenameIndex(
            model_name='document',
            new_name='documents_documen_67ef0b_idx',
            old_name='document_do_documen_033625_idx',
        ),
        migrations.RenameIndex(
            model_name='document',
            new_name='documents_editor__2a4d09_idx',
            old_name='document_do_editor__5b990b_idx',
        ),
        migrations.RenameIndex(
            model_name='document',
            new_name='documents_created_3c6eaa_idx',
            old_name='document_do_created_778a6d_idx',
        ),
        migrations.AddField(
            model_name='document',
            name='allow_comments',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='document',
            name='allow_editing',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='document',
            name='allow_sharing',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='document',
            name='content_json',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='document',
            name='is_public',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='document',
            name='soft_delete',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='document',
            name='block_note_content',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AlterField(
            model_name='document',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='document',
            name='document_type',
            field=models.CharField(choices=[('blog', 'Blog Post'), ('tutorial', 'Tutorial'), ('tech-doc', 'Technical Documentation'), ('marketing', 'Marketing Content'), ('srs', 'Software Requirements Specification'), ('other', 'Other')], default='other', max_length=50),
        ),
        migrations.AlterField(
            model_name='document',
            name='editor_type',
            field=models.CharField(choices=[('tiptap', 'TipTap'), ('blocknote', 'BlockNote'), ('hybrid', 'Hybrid'), ('markdown', 'Markdown'), ('other', 'Other')], default='other', max_length=20),
        ),
        migrations.AlterField(
            model_name='document',
            name='read_time',
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AlterUniqueTogether(
            name='document',
            unique_together={('author', 'title')},
        ),
        migrations.AlterField(
            model_name='document',
            name='title',
            field=models.CharField(max_length=200),
        ),
        migrations.AlterModelTable(
            name='document',
            table='documents',
        ),
        migrations.AddField(
            model_name='comment',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='document',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='document.document'),
        ),
        migrations.AddField(
            model_name='mediaasset',
            name='document',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media_assets', to='document.document'),
        ),
        migrations.AddField(
            model_name='mediaasset',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media_assets', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['name', 'slug'], name='tags_name_2fe43a_idx'),
        ),
        migrations.AddIndex(
            model_name='tag',
            index=models.Index(fields=['soft_delete'], name='tags_soft_de_3b7013_idx'),
        ),
        migrations.AddIndex(
            model_name='document',
            index=models.Index(fields=['soft_delete'], name='documents_soft_de_800ac0_idx'),
        ),
        migrations.RemoveField(
            model_name='document',
            name='tags',
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['document', 'author'], name='comments_documen_d43e8b_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['soft_delete'], name='comments_soft_de_93792d_idx'),
        ),
        migrations.AddConstraint(
            model_name='comment',
            constraint=models.CheckConstraint(condition=models.Q(('body', ''), _negated=True), name='comment_body_not_empty'),
        ),
        migrations.AddIndex(
            model_name='mediaasset',
            index=models.Index(fields=['document', 'owner'], name='media_asset_documen_de510f_idx'),
        ),
        migrations.AddIndex(
            model_name='mediaasset',
            index=models.Index(fields=['soft_delete'], name='media_asset_soft_de_0f66ec_idx'),
        ),
        migrations.AddConstraint(
            model_name='mediaasset',
            constraint=models.CheckConstraint(condition=models.Q(('file__isnull', False), ('url__isnull', False), _connector='OR'), name='media_asset_requires_file_or_url'),
        ),
        migrations.AddField(
            model_name='document',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='tagged_documents', to='document.tag'),
        ),
    ]
